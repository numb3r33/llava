# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/llava',
                'doc_host': 'https://numb3r33.github.io',
                'git_url': 'https://github.com/numb3r33/llava',
                'lib_path': 'llava'},
  'syms': { 'llava.conversation': { 'llava.conversation.Conversation': ('conversation.html#conversation', 'llava/conversation.py'),
                                    'llava.conversation.Conversation.append_message': ( 'conversation.html#conversation.append_message',
                                                                                        'llava/conversation.py'),
                                    'llava.conversation.Conversation.copy': ( 'conversation.html#conversation.copy',
                                                                              'llava/conversation.py'),
                                    'llava.conversation.Conversation.dict': ( 'conversation.html#conversation.dict',
                                                                              'llava/conversation.py'),
                                    'llava.conversation.Conversation.get_prompt': ( 'conversation.html#conversation.get_prompt',
                                                                                    'llava/conversation.py'),
                                    'llava.conversation.SeparatorStyle': ('conversation.html#separatorstyle', 'llava/conversation.py'),
                                    'llava.conversation.get_conv_template': ( 'conversation.html#get_conv_template',
                                                                              'llava/conversation.py')},
            'llava.core': {'llava.core.foo': ('core.html#foo', 'llava/core.py')},
            'llava.data.loading': { 'llava.data.loading.LLaVASample': ('data_loading.html#llavasample', 'llava/data/loading.py'),
                                    'llava.data.loading.get_conversations': ( 'data_loading.html#get_conversations',
                                                                              'llava/data/loading.py'),
                                    'llava.data.loading.get_image_path': ('data_loading.html#get_image_path', 'llava/data/loading.py'),
                                    'llava.data.loading.get_llava_items': ('data_loading.html#get_llava_items', 'llava/data/loading.py'),
                                    'llava.data.loading.get_stage1_dataloaders': ( 'data_loading.html#get_stage1_dataloaders',
                                                                                   'llava/data/loading.py'),
                                    'llava.data.loading.get_stage2_dataloaders': ( 'data_loading.html#get_stage2_dataloaders',
                                                                                   'llava/data/loading.py'),
                                    'llava.data.loading.get_test_dataloader': ( 'data_loading.html#get_test_dataloader',
                                                                                'llava/data/loading.py'),
                                    'llava.data.loading.parse_llava_jsonl': ( 'data_loading.html#parse_llava_jsonl',
                                                                              'llava/data/loading.py')},
            'llava.data.preprocessing': { 'llava.data.preprocessing.LLaVABatchTransform': ( 'data_processing.html#llavabatchtransform',
                                                                                            'llava/data/preprocessing.py'),
                                          'llava.data.preprocessing.LLaVABatchTransform.__init__': ( 'data_processing.html#llavabatchtransform.__init__',
                                                                                                     'llava/data/preprocessing.py'),
                                          'llava.data.preprocessing.LLaVABatchTransform._apply_plain_masking': ( 'data_processing.html#llavabatchtransform._apply_plain_masking',
                                                                                                                 'llava/data/preprocessing.py'),
                                          'llava.data.preprocessing.LLaVABatchTransform._apply_v1_masking': ( 'data_processing.html#llavabatchtransform._apply_v1_masking',
                                                                                                              'llava/data/preprocessing.py'),
                                          'llava.data.preprocessing.LLaVABatchTransform._find_subsequence': ( 'data_processing.html#llavabatchtransform._find_subsequence',
                                                                                                              'llava/data/preprocessing.py'),
                                          'llava.data.preprocessing.LLaVABatchTransform.decodes': ( 'data_processing.html#llavabatchtransform.decodes',
                                                                                                    'llava/data/preprocessing.py'),
                                          'llava.data.preprocessing.LLaVABatchTransform.encodes': ( 'data_processing.html#llavabatchtransform.encodes',
                                                                                                    'llava/data/preprocessing.py'),
                                          'llava.data.preprocessing.LLaVATextTokenizer': ( 'data_processing.html#llavatexttokenizer',
                                                                                           'llava/data/preprocessing.py'),
                                          'llava.data.preprocessing.LLaVATextTokenizer.__init__': ( 'data_processing.html#llavatexttokenizer.__init__',
                                                                                                    'llava/data/preprocessing.py'),
                                          'llava.data.preprocessing.LLaVATextTokenizer.encodes': ( 'data_processing.html#llavatexttokenizer.encodes',
                                                                                                   'llava/data/preprocessing.py'),
                                          'llava.data.preprocessing.format_plain_template': ( 'data_processing.html#format_plain_template',
                                                                                              'llava/data/preprocessing.py'),
                                          'llava.data.preprocessing.format_v1_template': ( 'data_processing.html#format_v1_template',
                                                                                           'llava/data/preprocessing.py')},
            'llava.evaluation': { 'llava.evaluation.calculate_single_anls': ( 'evaluation.html#calculate_single_anls',
                                                                              'llava/evaluation.py'),
                                  'llava.evaluation.evaluate_custom_set': ('evaluation.html#evaluate_custom_set', 'llava/evaluation.py'),
                                  'llava.evaluation.evaluate_textvqa': ('evaluation.html#evaluate_textvqa', 'llava/evaluation.py'),
                                  'llava.evaluation.evaluate_vqa': ('evaluation.html#evaluate_vqa', 'llava/evaluation.py'),
                                  'llava.evaluation.generate_predictions': ('evaluation.html#generate_predictions', 'llava/evaluation.py'),
                                  'llava.evaluation.get_raw_images_for_batch': ( 'evaluation.html#get_raw_images_for_batch',
                                                                                 'llava/evaluation.py'),
                                  'llava.evaluation.run_evaluation': ('evaluation.html#run_evaluation', 'llava/evaluation.py')},
            'llava.model.adaptive': { 'llava.model.adaptive.AdaptiveLLaVAModel': ( 'model_adaptive.html#adaptivellavamodel',
                                                                                   'llava/model/adaptive.py'),
                                      'llava.model.adaptive.AdaptiveLLaVAModel.__init__': ( 'model_adaptive.html#adaptivellavamodel.__init__',
                                                                                            'llava/model/adaptive.py'),
                                      'llava.model.adaptive.AdaptiveLLaVAModel.forward': ( 'model_adaptive.html#adaptivellavamodel.forward',
                                                                                           'llava/model/adaptive.py'),
                                      'llava.model.adaptive.AdaptivePatcher': ( 'model_adaptive.html#adaptivepatcher',
                                                                                'llava/model/adaptive.py'),
                                      'llava.model.adaptive.AdaptivePatcher.__init__': ( 'model_adaptive.html#adaptivepatcher.__init__',
                                                                                         'llava/model/adaptive.py'),
                                      'llava.model.adaptive.AdaptivePatcher.forward': ( 'model_adaptive.html#adaptivepatcher.forward',
                                                                                        'llava/model/adaptive.py'),
                                      'llava.model.adaptive.VariableResolutionPatcher': ( 'model_adaptive.html#variableresolutionpatcher',
                                                                                          'llava/model/adaptive.py'),
                                      'llava.model.adaptive.VariableResolutionPatcher.__init__': ( 'model_adaptive.html#variableresolutionpatcher.__init__',
                                                                                                   'llava/model/adaptive.py'),
                                      'llava.model.adaptive.VariableResolutionPatcher.forward': ( 'model_adaptive.html#variableresolutionpatcher.forward',
                                                                                                  'llava/model/adaptive.py'),
                                      'llava.model.adaptive.VariableResolutionPatcher.select_best_resolution': ( 'model_adaptive.html#variableresolutionpatcher.select_best_resolution',
                                                                                                                 'llava/model/adaptive.py')},
            'llava.model.baseline': { 'llava.model.baseline.BaselineLLaVAModel': ( 'model_baseline.html#baselinellavamodel',
                                                                                   'llava/model/baseline.py'),
                                      'llava.model.baseline.BaselineLLaVAModel.__init__': ( 'model_baseline.html#baselinellavamodel.__init__',
                                                                                            'llava/model/baseline.py'),
                                      'llava.model.baseline.BaselineLLaVAModel.apply_activation_checkpointing': ( 'model_baseline.html#baselinellavamodel.apply_activation_checkpointing',
                                                                                                                  'llava/model/baseline.py'),
                                      'llava.model.baseline.BaselineLLaVAModel.encode_image': ( 'model_baseline.html#baselinellavamodel.encode_image',
                                                                                                'llava/model/baseline.py'),
                                      'llava.model.baseline.BaselineLLaVAModel.forward': ( 'model_baseline.html#baselinellavamodel.forward',
                                                                                           'llava/model/baseline.py'),
                                      'llava.model.baseline.BaselineLLaVAModel.get_input_embeddings': ( 'model_baseline.html#baselinellavamodel.get_input_embeddings',
                                                                                                        'llava/model/baseline.py'),
                                      'llava.model.baseline.BaselineLLaVAModel.load_language_model': ( 'model_baseline.html#baselinellavamodel.load_language_model',
                                                                                                       'llava/model/baseline.py'),
                                      'llava.model.baseline.BaselineLLaVAModel.load_vision_tower': ( 'model_baseline.html#baselinellavamodel.load_vision_tower',
                                                                                                     'llava/model/baseline.py'),
                                      'llava.model.baseline.BaselineLLaVAModel.resize_llm_embeddings': ( 'model_baseline.html#baselinellavamodel.resize_llm_embeddings',
                                                                                                         'llava/model/baseline.py'),
                                      'llava.model.baseline.LLaVAProjector': ( 'model_baseline.html#llavaprojector',
                                                                               'llava/model/baseline.py'),
                                      'llava.model.baseline.LLaVAProjector.__init__': ( 'model_baseline.html#llavaprojector.__init__',
                                                                                        'llava/model/baseline.py'),
                                      'llava.model.baseline.LLaVAProjector.forward': ( 'model_baseline.html#llavaprojector.forward',
                                                                                       'llava/model/baseline.py')},
            'llava.training.core': { 'llava.training.core.LLaVALoss': ('training_core.html#llavaloss', 'llava/training/core.py'),
                                     'llava.training.core.LLaVALoss.__init__': ( 'training_core.html#llavaloss.__init__',
                                                                                 'llava/training/core.py'),
                                     'llava.training.core.LLaVALoss.forward': ( 'training_core.html#llavaloss.forward',
                                                                                'llava/training/core.py')},
            'llava.training.stage1': { 'llava.training.stage1.get_stage1_learner': ( 'training_stage1.html#get_stage1_learner',
                                                                                     'llava/training/stage1.py'),
                                       'llava.training.stage1.llava_stage1_splitter': ( 'training_stage1.html#llava_stage1_splitter',
                                                                                        'llava/training/stage1.py'),
                                       'llava.training.stage1.train_stage1': ( 'training_stage1.html#train_stage1',
                                                                               'llava/training/stage1.py')},
            'llava.training.stage2': { 'llava.training.stage2._get_stage2_learner_internal': ( 'training_stage2.html#_get_stage2_learner_internal',
                                                                                               'llava/training/stage2.py'),
                                       'llava.training.stage2._train_stage2_internal': ( 'training_stage2.html#_train_stage2_internal',
                                                                                         'llava/training/stage2.py'),
                                       'llava.training.stage2.adaptive_llava_stage2_splitter': ( 'training_stage2.html#adaptive_llava_stage2_splitter',
                                                                                                 'llava/training/stage2.py'),
                                       'llava.training.stage2.cleanup_learner': ( 'training_stage2.html#cleanup_learner',
                                                                                  'llava/training/stage2.py'),
                                       'llava.training.stage2.get_adaptive_stage2_learner': ( 'training_stage2.html#get_adaptive_stage2_learner',
                                                                                              'llava/training/stage2.py'),
                                       'llava.training.stage2.get_stage2_learner': ( 'training_stage2.html#get_stage2_learner',
                                                                                     'llava/training/stage2.py'),
                                       'llava.training.stage2.llava_stage2_splitter': ( 'training_stage2.html#llava_stage2_splitter',
                                                                                        'llava/training/stage2.py'),
                                       'llava.training.stage2.train_adaptive_stage2': ( 'training_stage2.html#train_adaptive_stage2',
                                                                                        'llava/training/stage2.py'),
                                       'llava.training.stage2.train_stage2': ( 'training_stage2.html#train_stage2',
                                                                               'llava/training/stage2.py')},
            'llava.utils': { 'llava.utils.init_wandb': ('utils.html#init_wandb', 'llava/utils.py'),
                             'llava.utils.load_config': ('utils.html#load_config', 'llava/utils.py')}}}
